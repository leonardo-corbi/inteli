<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/assets/favicon.ico">
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Lucide Icons -->
    <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
    
    <!-- CSS Principal -->
    <link rel="stylesheet" href="/css/style.css">
    
    <style>
        .auth-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, var(--primary-blue) 0%, var(--secondary-blue) 100%);
            padding: 1rem;
        }
        
        .auth-card {
            background: white;
            border-radius: 16px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            padding: 2.5rem;
            width: 100%;
            max-width: 450px;
            position: relative;
            overflow: hidden;
        }
        
        .auth-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, var(--primary-blue), var(--secondary-blue));
        }
        
        .auth-header {
            text-align: center;
            margin-bottom: 2rem;
        }
        
        .auth-logo {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 64px;
            height: 64px;
            background: linear-gradient(135deg, var(--primary-blue), var(--secondary-blue));
            border-radius: 16px;
            margin-bottom: 1rem;
            color: white;
        }
        
        .auth-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--gray-900);
            margin: 0 0 0.5rem 0;
        }
        
        .auth-subtitle {
            color: var(--gray-600);
            margin: 0;
        }
        
        .form-group {
            margin-bottom: 1.5rem;
        }
        
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }
        
        .form-label {
            display: block;
            font-weight: 500;
            color: var(--gray-700);
            margin-bottom: 0.5rem;
        }
        
        .form-control {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid var(--gray-200);
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.2s ease;
            background: white;
        }
        
        .form-control:focus {
            outline: none;
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        
        .btn-auth {
            width: 100%;
            padding: 0.875rem 1rem;
            background: linear-gradient(135deg, var(--primary-blue), var(--secondary-blue));
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            margin-bottom: 1rem;
        }
        
        .btn-auth:hover {
            transform: translateY(-1px);
            box-shadow: 0 8px 20px rgba(59, 130, 246, 0.3);
        }
        
        .auth-link {
            text-align: center;
            color: var(--gray-600);
        }
        
        .auth-link a {
            color: var(--primary-blue);
            text-decoration: none;
            font-weight: 500;
        }
        
        .auth-link a:hover {
            text-decoration: underline;
        }
        
        .alert {
            padding: 0.75rem 1rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            font-size: 0.875rem;
        }
        
        .alert-error {
            background: #fef2f2;
            color: #dc2626;
            border: 1px solid #fecaca;
        }
        
        .alert-success {
            background: #f0fdf4;
            color: #16a34a;
            border: 1px solid #bbf7d0;
        }
        
        .password-toggle {
            position: relative;
        }
        
        .password-toggle-btn {
            position: absolute;
            right: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            color: var(--gray-500);
            cursor: pointer;
            padding: 0.25rem;
        }
        
        .password-toggle-btn:hover {
            color: var(--gray-700);
        }
        
        .password-strength {
            margin-top: 0.5rem;
            font-size: 0.75rem;
        }
        
        .strength-weak { color: #dc2626; }
        .strength-medium { color: #f59e0b; }
        .strength-strong { color: #16a34a; }
    </style>
</head>
<body>
    <div class="auth-container">
        <div class="auth-card">
            <div class="auth-header">
                <div class="auth-logo">
                    <i data-lucide="user-plus" style="width: 32px; height: 32px;"></i>
                </div>
                <h1 class="auth-title">Criar Conta</h1>
                <p class="auth-subtitle">Registre-se para acessar o sistema de reservas</p>
            </div>
            
            <% if (typeof error !== 'undefined' && error) { %>
                <div class="alert alert-error">
                    <i data-lucide="alert-circle" style="width: 16px; height: 16px; display: inline; margin-right: 0.5rem;"></i>
                    <%= error %>
                </div>
            <% } %>
            
            <% if (typeof success !== 'undefined' && success) { %>
                <div class="alert alert-success">
                    <i data-lucide="check-circle" style="width: 16px; height: 16px; display: inline; margin-right: 0.5rem;"></i>
                    <%= success %>
                </div>
            <% } %>
            
            <form method="POST" action="/register" id="registerForm">
                <div class="form-group">
                    <label for="nome" class="form-label">Nome Completo</label>
                    <input 
                        type="text" 
                        id="nome" 
                        name="nome" 
                        class="form-control" 
                        placeholder="Seu nome completo"
                        value="<%= typeof formData !== 'undefined' && formData.nome ? formData.nome : '' %>"
                        required
                    >
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="email" class="form-label">Email</label>
                        <input 
                            type="email" 
                            id="email" 
                            name="email" 
                            class="form-control" 
                            placeholder="seu@email.com"
                            value="<%= typeof formData !== 'undefined' && formData.email ? formData.email : '' %>"
                            required
                        >
                    </div>
                    
                    <div class="form-group">
                        <label for="matricula" class="form-label">Matrícula</label>
                        <input 
                            type="text" 
                            id="matricula" 
                            name="matricula" 
                            class="form-control" 
                            placeholder="USR001"
                            value="<%= typeof formData !== 'undefined' && formData.matricula ? formData.matricula : '' %>"
                            required
                        >
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="senha" class="form-label">Senha</label>
                    <div class="password-toggle">
                        <input 
                            type="password" 
                            id="senha" 
                            name="senha" 
                            class="form-control" 
                            placeholder="Mínimo 6 caracteres"
                            minlength="6"
                            required
                            onkeyup="checkPasswordStrength()"
                        >
                        <button type="button" class="password-toggle-btn" onclick="togglePassword('senha')">
                            <i data-lucide="eye" id="senha-icon" style="width: 16px; height: 16px;"></i>
                        </button>
                    </div>
                    <div id="password-strength" class="password-strength"></div>
                </div>
                
                <div class="form-group">
                    <label for="confirmarSenha" class="form-label">Confirmar Senha</label>
                    <div class="password-toggle">
                        <input 
                            type="password" 
                            id="confirmarSenha" 
                            name="confirmarSenha" 
                            class="form-control" 
                            placeholder="Confirme sua senha"
                            required
                            onkeyup="checkPasswordMatch()"
                        >
                        <button type="button" class="password-toggle-btn" onclick="togglePassword('confirmarSenha')">
                            <i data-lucide="eye" id="confirmarSenha-icon" style="width: 16px; height: 16px;"></i>
                        </button>
                    </div>
                    <div id="password-match" class="password-strength"></div>
                </div>
                
                <button type="submit" class="btn-auth">
                    <i data-lucide="user-plus" style="width: 16px; height: 16px; margin-right: 0.5rem; display: inline;"></i>
                    Criar Conta
                </button>
            </form>
            
            <div class="auth-link">
                Já tem uma conta? <a href="/login">Fazer login</a>
            </div>
        </div>
    </div>
    
    <script>
        // Inicializar ícones Lucide
        lucide.createIcons();
        
        // Função para alternar visibilidade da senha
        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const icon = document.getElementById(fieldId + '-icon');
            
            if (field.type === 'password') {
                field.type = 'text';
                icon.setAttribute('data-lucide', 'eye-off');
            } else {
                field.type = 'password';
                icon.setAttribute('data-lucide', 'eye');
            }
            
            lucide.createIcons();
        }
        
        // Verificar força da senha
        function checkPasswordStrength() {
            const password = document.getElementById('senha').value;
            const strengthDiv = document.getElementById('password-strength');
            
            if (password.length === 0) {
                strengthDiv.innerHTML = '';
                return;
            }
            
            let strength = 0;
            if (password.length >= 6) strength++;
            if (password.match(/[a-z]/)) strength++;
            if (password.match(/[A-Z]/)) strength++;
            if (password.match(/[0-9]/)) strength++;
            if (password.match(/[^a-zA-Z0-9]/)) strength++;
            
            if (strength < 3) {
                strengthDiv.innerHTML = '<span class="strength-weak">Senha fraca</span>';
            } else if (strength < 4) {
                strengthDiv.innerHTML = '<span class="strength-medium">Senha média</span>';
            } else {
                strengthDiv.innerHTML = '<span class="strength-strong">Senha forte</span>';
            }
        }
        
        // Verificar se as senhas coincidem
        function checkPasswordMatch() {
            const password = document.getElementById('senha').value;
            const confirmPassword = document.getElementById('confirmarSenha').value;
            const matchDiv = document.getElementById('password-match');
            
            if (confirmPassword.length === 0) {
                matchDiv.innerHTML = '';
                return;
            }
            
            if (password === confirmPassword) {
                matchDiv.innerHTML = '<span class="strength-strong">Senhas coincidem</span>';
            } else {
                matchDiv.innerHTML = '<span class="strength-weak">Senhas não coincidem</span>';
            }
        }
        
        // Validação do formulário
        document.getElementById('registerForm').addEventListener('submit', function(e) {
            const password = document.getElementById('senha').value;
            const confirmPassword = document.getElementById('confirmarSenha').value;
            
            if (password !== confirmPassword) {
                e.preventDefault();
                alert('As senhas não coincidem!');
                return false;
            }
            
            if (password.length < 6) {
                e.preventDefault();
                alert('A senha deve ter pelo menos 6 caracteres!');
                return false;
            }
        });
        
        // Capturar parâmetros da URL para mostrar mensagens
        const urlParams = new URLSearchParams(window.location.search);
        const error = urlParams.get('error');
        const success = urlParams.get('success');
        
        if (error && !document.querySelector('.alert-error')) {
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-error';
            alertDiv.innerHTML = `<i data-lucide="alert-circle" style="width: 16px; height: 16px; display: inline; margin-right: 0.5rem;"></i>${error}`;
            document.querySelector('form').parentNode.insertBefore(alertDiv, document.querySelector('form'));
            lucide.createIcons();
        }
        
        if (success && !document.querySelector('.alert-success')) {
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-success';
            alertDiv.innerHTML = `<i data-lucide="check-circle" style="width: 16px; height: 16px; display: inline; margin-right: 0.5rem;"></i>${success}`;
            document.querySelector('form').parentNode.insertBefore(alertDiv, document.querySelector('form'));
            lucide.createIcons();
        }
    </script>
</body>
</html>

